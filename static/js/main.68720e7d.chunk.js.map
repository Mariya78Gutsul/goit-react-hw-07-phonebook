{"version":3,"sources":["components/ContactList/ContactList.module.css","redux/contacts/contactsActions.js","api/api.js","redux/contacts/contactsOperatios.js","redux/contacts/contactsReducer.js","redux/store.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/ContactForm/ContactForm.jsx","redux/contacts/contactsSelectors.js","components/App.jsx","components/LocalStorage/LocalStorage.jsx","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","nanoid","deleteContact","changeFilter","getContacts","fetchContacts","a","axios","get","data","deleteContacts","contactId","delete","createContacts","post","defaults","baseURL","createAsyncThunk","_","rejectWithValue","contactsAPI","contacts","items","createReducer","fulfilled","state","filter","isLoading","pending","rejected","error","action","actions","combineReducers","store","configureStore","reducer","contactsReducer","devTools","process","middleware","getDefaultMiddleware","ContactList","onRemoveContact","className","s","list","map","contact","item","type","onClick","Filter","onChangeFilter","value","onChange","ContactForm","onSubmit","useState","setName","setNumber","handleChange","e","currentTarget","preventDefault","label","input","button","getFilter","getContactsFiltered","normalizedFilter","toLowerCase","includes","App","dispatch","useDispatch","useSelector","useEffect","key","localStorage","setItem","JSON","stringify","storage","contactsActions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68720e7d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1o0Zr\",\"item\":\"ContactList_item__10kz_\",\"TaskList_text\":\"ContactList_TaskList_text__6Ql-P\",\"button\":\"ContactList_button__2I4uz\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nconst addContact = createAction(\"contact/add\", (name, number) => ({\r\n  payload: {\r\n    id: nanoid(3),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\n\r\nconst deleteContact = createAction(\"contact/delete\");\r\n\r\nconst changeFilter = createAction(\"contact/changeFilter\");\r\n\r\nconst getContacts = createAction(\"contact/get\");\r\n\r\nexport default { addContact, deleteContact, changeFilter, getContacts };\r\n","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://61c4d1aff1af4a0017d997fd.mockapi.io\";\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(`/contacts`);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContacts(contactId) {\r\n  const { data } = await axios.delete(`/contacts/${contactId}`);\r\n  return data;\r\n}\r\n\r\nexport async function createContacts({ name, number }) {\r\n  const { data } = await axios.post(`/contacts`, { name, number });\r\n  return data;\r\n}\r\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport * as contactsAPI from \"../../api/api\";\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  \"contacts/fetchContacts\",\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await contactsAPI.fetchContacts();\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteContacts = createAsyncThunk(\r\n  \"contacts/deleteContacts\",\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await contactsAPI.deleteContacts(id);\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const createContacts = createAsyncThunk(\r\n  \"contacts/createContacts\",\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await contactsAPI.createContacts({ name, number });\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\r\nimport actions from \"./contactsActions\";\r\nimport {\r\n  fetchContacts,\r\n  deleteContacts,\r\n  createContacts,\r\n} from \"./contactsOperatios\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContacts.fulfilled]: (state, { payload }) => payload,\r\n  [createContacts.fulfilled]: (state, { payload }) => {\r\n    return [...state, payload];\r\n  },\r\n  [deleteContacts.fulfilled]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n  [createContacts.pending]: () => true,\r\n  [createContacts.fulfilled]: () => false,\r\n  [createContacts.rejected]: () => false,\r\n  [deleteContacts.pending]: () => true,\r\n  [deleteContacts.fulfilled]: () => false,\r\n  [deleteContacts.rejected]: () => false,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, action) => action.payload,\r\n  [fetchContacts.pending]: () => null,\r\n  [createContacts.rejected]: (_, action) => action.payload,\r\n  [createContacts.pending]: () => null,\r\n  [deleteContacts.rejected]: (_, action) => action.payload,\r\n  [deleteContacts.pending]: () => null,\r\n});\r\nconst filter = createReducer(\"\", {\r\n  [actions.changeFilter]: (state, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  isLoading,\r\n  error,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware: (getDefaultMiddleware) => [...getDefaultMiddleware()],\r\n});\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map((contact) => (\n        <li className={s.item} key={contact.id}>\n          <p>\n            {contact.name}: {contact.number}\n          </p>\n          <button type=\"button\" onClick={() => onRemoveContact(contact.id)}>\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n};\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default function Filter({ filter, onChangeFilter }) {\n  return (\n    <div>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChangeFilter}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./ContactForm.module.css\";\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit(name, number);\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  return (\n    <form className={s.list} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","export const getContacts = (state) => state.contacts.items;\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getContactsFiltered = (state) => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport contactsActions from \"../redux/contacts/contactsActions\";\nimport {\n  getContactsFiltered,\n  getFilter,\n} from \"../redux/contacts/contactsSelectors\";\nimport * as storage from \"./LocalStorage/LocalStorage\";\n\nconst STORAGE_KEY = \"contacts\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const contacts = useSelector(getContactsFiltered);\n\n  useEffect(() => {\n    storage.set(STORAGE_KEY, contacts);\n  }, [contacts]);\n\n  const addContact = (name, number) => {\n    dispatch(contactsActions.addContact(name, number));\n  };\n\n  const changeFilter = (e) => {\n    dispatch(contactsActions.changeFilter(e.currentTarget.value));\n  };\n\n  const getVisibleContacts = () => {\n    return contacts.filter((contact) => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  };\n\n  const deleteContact = (id) => {\n    dispatch(contactsActions.deleteContact(id));\n    // setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n\n      <Filter filter={filter} onChangeFilter={changeFilter} />\n      <ContactList\n        contacts={getVisibleContacts()}\n        onRemoveContact={deleteContact}\n      />\n    </div>\n  );\n}\n","const set = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst get = (key) => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst remove = (key) => {\r\n  try {\r\n    return localStorage.removeItem(key);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { get, set, remove };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactForm_list__RuXRV\",\"label\":\"ContactForm_label__36r0G\",\"input\":\"ContactForm_input__PeW9Y\",\"button\":\"ContactForm_button__1vwA_\"};"],"sourceRoot":""}